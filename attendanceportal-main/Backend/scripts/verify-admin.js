const mongoose = require('mongoose');
const Employee = require('../models/Employee');

const MONGO_URI = process.env.MONGO_URL || 'mongodb://localhost:27017/attendanceportal';

async function verifyAdminUser() {
  try {
    console.log('üîó Connecting to MongoDB...');
    console.log('üì° MongoDB URI:', MONGO_URI.replace(/\/\/.*@/, '//***:***@'));
    
    await mongoose.connect(MONGO_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
      serverSelectionTimeoutMS: 30000
    });
    
    console.log('‚úÖ Connected to MongoDB successfully');
    
    // Check if admin user exists
    const adminUser = await Employee.findOne({ email: 'admin@techcorp.com' });
    
    if (adminUser) {
      console.log('‚úÖ Admin user found successfully!');
      console.log('üìß Email:', adminUser.email);
      console.log('üë§ Name:', adminUser.name);
      console.log('üéØ Role:', adminUser.role);
      console.log('üÜî Employee ID:', adminUser.employeeId);
      console.log('üìÖ Created:', adminUser.createdAt);
      
      // Test password
      const bcrypt = require('bcryptjs');
      const testPassword = 'password123';
      const isPasswordValid = await bcrypt.compare(testPassword, adminUser.password);
      console.log('üîë Password test result:', isPasswordValid ? '‚úÖ Valid' : '‚ùå Invalid');
      
      if (!isPasswordValid) {
        console.log('‚ö†Ô∏è  Password mismatch! Updating password...');
        const hashedPassword = await bcrypt.hash(testPassword, 12);
        adminUser.password = hashedPassword;
        await adminUser.save();
        console.log('‚úÖ Password updated successfully');
      }
    } else {
      console.log('‚ùå Admin user NOT found!');
      console.log('üí° This means the initialization script failed');
      console.log('üîß You may need to run createAdmin.js manually');
    }
    
    // Check total users
    const totalUsers = await Employee.countDocuments();
    console.log('üìä Total users in database:', totalUsers);
    
    // List all users
    const allUsers = await Employee.find({}, 'email name role employeeId');
    console.log('üë• All users in database:');
    allUsers.forEach(user => {
      console.log(`   - ${user.email} (${user.name} - ${user.role}) [${user.employeeId}]`);
    });
    
    mongoose.connection.close();
    console.log('‚úÖ Database connection closed');
    
  } catch (error) {
    console.error('‚ùå Error verifying admin user:', error.message);
    process.exit(1);
  }
}

// Run the verification
verifyAdminUser();
