version: '3.8'

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=/api
      - TZ=Asia/Kolkata
    restart: unless-stopped
    networks:
      - attendance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URL=mongodb://mongo:27017/attendanceportal
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - TZ=Asia/Kolkata
      - MONGODB_URI=mongodb://mongo:27017/attendanceportal
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - attendance-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:5000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - backend_logs:/app/logs
      - ./Backend/scripts:/app/scripts:ro
    command: ["node", "index.js"]

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - mongo_data:/data/db
      - ./Backend/scripts:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - attendance-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: ["mongod", "--bind_ip_all", "--timezone", "Asia/Kolkata"]

volumes:
  mongo_data:
    driver: local
  backend_logs:
    driver: local

networks:
  attendance-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
