version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: attendance-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: attendanceportal
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./Backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - attendance-network

  # Backend API Service
  backend:
    build:
      context: ./Backend
      dockerfile: docker/Dockerfile
    container_name: attendance-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/attendanceportal?authSource=admin
      PORT: 5000
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - attendance-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./Frontend
      dockerfile: docker/Dockerfile
    container_name: attendance-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - attendance-network
    environment:
      - REACT_APP_API_URL=http://backend:5000

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: attendance-nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - attendance-network

volumes:
  mongodb_data:
    driver: local

networks:
  attendance-network:
    driver: bridge

